@using Hybrid.Models

@model MenuViewModel

@{
    ViewBag.Title = "Generate";
    var dates = ViewBag.dates as List<DateTime>;
    var startDate = (DateTime)ViewBag.startDate;
}


<h2>Generate new menu</h2>

@using (Html.BeginForm("Save", "Menu", FormMethod.Post, new { @class = "form-horizontal", id = "menuForm" }))
{

    <div class="row">
        <div class="col-md-8">

            <div class="form-group">
                <label for="datepicker" class="col-sm-3 control-label">Pick a date</label>
                <div class="col-sm-9">
                    <div class="input-group date datepicker-inline" id="datepicker">
                        @Html.TextBoxFor(model => model.ForDay, "{0:dd/MM/yyyy}", new { @class = "form-control dateInput", @readonly = "readonly" })
                        @*<input type="text" class="form-control" id="dateInput" />*@
                        <span class="input-group-addon" id="basic-addon1">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.ForDay, "", new { @class = "text-danger" }, "Date")
                </div>
            </div>
            <div class="form-group">
                <label for="noMeals" class="col-sm-3 control-label">Number of Meals</label>
                <div class="col-sm-9">
                    <select id="noMeals" name="noOfMeals" class="form-control">
                        @for (int i = 1; i < 11; i++)
                        {
                            <option>@i</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword" class="col-sm-3 control-label">Exclude</label>
                <div class="col-sm-9">
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button"
                                id="dropdownMenu1" data-toggle="dropdown"
                                aria-haspopup="true" aria-expanded="true">
                            <i class="glyphicon glyphicon-cog"></i>
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu checkbox-menu allow-focus" aria-labelledby="dropdownMenu1">

                            <li>
                                <label>
                                    <input type="checkbox"> Ingredient 1
                                </label>
                            </li>

                            <li>
                                <label>
                                    <input type="checkbox"> Ingredient 2
                                </label>
                            </li>

                            <li>
                                <label>
                                    <input type="checkbox"> Ingredient 3
                                </label>
                            </li>

                        </ul>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-3 col-md-9">
                    <button class="btn btn-primary" id="btnGenerate">Generate</button>
                    <button class="btn btn-success" style="display:none" id="btnSave">Save</button>
                </div>
            </div>

        </div>
    </div>

    <div id="meals">
    </div>
}

<div class="col-sm-offset-2">@Html.Partial("_Loader")</div>


@section scripts {
    <script>
        function showMenu(view) {
            //console.log($('#menuForm').serialize());
            //    $("#meals").html(view).fadeIn(800);
            //    $('#btnSave').fadeIn(100);
        }
        const dateFormat = "dd-mm-yyyy"

        $('#datepicker').datepicker({
            format:dateFormat,
            autoclose: true,
            startDate: new Date(Date.parse("15-07-2019")),
            datesDisabled: @Html.Raw(Json.Encode(dates.ToArray()))
        });

        $(".checkbox-menu").on("change", "input[type='checkbox']", function () {
            $(this).closest("li").toggleClass("active", this.checked);
        });

        $(document).on('click', '.allow-focus', function (e) {
            e.stopPropagation();
        });


        $('.dateInput').css({
            width: $('#noMeals').css('width')
        });

        @*$('#btnSave').click(function (e) {
             $('#menuForm').attr('action', '@Url.Action("Save")');
        });*@

        function updateCheckboxes() {
            $(':checkbox', '#meals').each((i, el) => {
                if ($(el).prop('checked')) {
                    $(el).trigger('change');
                }
            })

        }

        $('#btnGenerate').click((e) => {
            e.preventDefault();
            console.log($('#menuForm').serializeArray());
            $('#meals').hide();
            $('#btnSave').fadeOut(200);
            $.ajax({
                    url: '@Url.Action("GenerateMeals")',
                    method: 'POST',
                    cache: false,
                    dataType: 'html',
                    data: $('#menuForm').serialize(),
                    success: function (partialView) {
                        $("#meals").html(partialView).fadeIn(800);
                        $('#btnSave').fadeIn(100);
                        updateCheckboxes();
                    }
            })


             @*$.ajax({
                url: "@Url.Action("GenerateMeals")",
                type: "POST",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.responseText);
                },
                success: function (response) {
                    alert(response);
                }
            });*@

        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
