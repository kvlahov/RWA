@using Hybrid.Models
@using Hybrid.Models.Enums

@model MenuViewModel

@{
    var types = ViewBag.types as Dictionary<IngredientType, int>;
    var userCalories = (double)ViewBag.userCalories;
}
<h4>Target calories: <span class="label label-info">@userCalories</span></h4>
<table class="table table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Meal</th>
            <th scope="col">Ingredient</th>
            <th scope="col">Type</th>
            <th scope="col">Unit of Mesurement</th>
        </tr>
    </thead>
    <tbody>
        @{var i = 1; }
        @foreach (var meal in Model.Meals)
        {
            var first = true;
            @(new HtmlString("<tr>"))
            <th rowspan="3" style="vertical-align:middle !important" scope="row">@i</th>
            <td rowspan="3" style="vertical-align:middle !important">@meal.Name</td>

            foreach (var entry in meal.IngredientEnergy)
            {
                if (!first)
                {
                    @(new HtmlString("<tr>"))
                }

                <td>@entry.Key.Name</td>
                <td>
                    @entry.Key.GetIngredientType()
                </td>


                if (entry.Value.Count > 1)
                {
                    <td>
                        <select class="form-control">
                            @foreach (var item in entry.Value)
                            {
                                <option>@item.Value.ToString("0.00") @item.Unit.Type</option>
                            }
                        </select>
                    </td>
                }
                else
                {
                    <td>
                        @entry.Value.First().Value.ToString("0.00") @entry.Value.First().Unit.Type
                    </td>
                }
                if (first)
                {
                    first = false;
                }
                @*@(new HtmlString("</tr>"))*@
            }
        i++;
    }

        </tbody>
    </table>